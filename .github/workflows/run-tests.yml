name: run-tests
on: [push]
jobs:
  run-api-tests:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/circles_test
      DATABASE_DIALECT: postgres
      HUB_ADDRESS: '0xCfEB869F69431e42cdB54A4F4f105C19C080A601'
      SAFE_ADDRESS: '0x59d3631c86BbE35EF041872d502F218A39FBa150'
      RELAY_SERVICE_ENDPOINT: http://relay.circles.local
      PROXY_FACTORY_ADDRESS: '0x9b1f7F645351AF3631a656421eD2e40f2802E6c0'
      SAFE_DEFAULT_CALLBACK_HANDLER: '0x67B5656d60a809915323Bf2C40A8bEF15A152e3e'
      API_SERVICE_ENDPOINT: http://api.circles.local
      GRAPH_NODE_ENDPOINT: http://graph.circles.local
      SUBGRAPH_NAME: circlesubi/circles-subgraph
      ETHEREUM_NODE_WS: ws://localhost:8545
      DATABASE_SOURCE: graph
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: circles_test
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Setup env file
        run: cp .env.example .env

      - run: npm run db:migrate
      - run: npm run db:seed
      - run: npm run test
